{
  "hash": "f1e77a5f306291d76fbf4558fa2825a0",
  "result": {
    "markdown": "---\ntitle: \"Tidy Tuesday on Life Expectancy - Part Two\"\nauthor: \n  - \"Jon Minton\"\n  - \"Andrew Saul\"\n  - \"Nick Christofides\"\n  - \"James McMahon\"\n  - \"Kennedy Owusu-Afriyie\"\n  - \"Sandra Nwobi\"\ndate: \"2023-12-13\"\ncode-fold: true\nwarning: false\nmessage: false\ncategories: [R, tidy tuesday, Life Expectancy]\n---\n\n\n## Introduction \n\nIn the [previous week's TidyTuesday session](../tidy-tuesday-life-expectancy/index.qmd), we looked at [Life Expectancy](https://github.com/rfordatascience/tidytuesday/tree/master/data/2023/2023-12-05). \n\nFor this week, the Tidy Tuesday dataset of the week was of [Christmas films](https://github.com/rfordatascience/tidytuesday/tree/master/data/2023/2023-12-12). However, as public health folks we felt more interested in continuing to look at life expectancy, so continued with [the previous week's dataset](https://github.com/rfordatascience/tidytuesday/tree/master/data/2023/2023-12-05). \n\nThis session was led by Andrew Saul. \n\n## Script and outputs from session\n\nLoading some packages \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidytuesdayR)\n```\n:::\n\n\nUse the `tidytuesdayR` package to load the data (rather than a direct link):\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load('2023-12-05')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tDownloading file 1 of 3: `life_expectancy.csv`\n\tDownloading file 2 of 3: `life_expectancy_different_ages.csv`\n\tDownloading file 3 of 3: `life_expectancy_female_male.csv`\n```\n:::\n:::\n\n\nPopulate the content of the list above into three separate datasets:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nle <- tuesdata[[1]]\nle_diff <- tuesdata[[2]]\nle_gender <- tuesdata[[3]]\n```\n:::\n\n\nHave a quick look at the data \n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(le)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 20,755\nColumns: 4\n$ Entity         <chr> \"Afghanistan\", \"Afghanistan\", \"Afghanistan\", \"Afghanist…\n$ Code           <chr> \"AFG\", \"AFG\", \"AFG\", \"AFG\", \"AFG\", \"AFG\", \"AFG\", \"AFG\",…\n$ Year           <dbl> 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1…\n$ LifeExpectancy <dbl> 27.7275, 27.9634, 28.4456, 28.9304, 29.2258, 29.9206, 3…\n```\n:::\n\n```{.r .cell-code}\nglimpse(le_diff)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 20,755\nColumns: 9\n$ Entity           <chr> \"Afghanistan\", \"Afghanistan\", \"Afghanistan\", \"Afghani…\n$ Code             <chr> \"AFG\", \"AFG\", \"AFG\", \"AFG\", \"AFG\", \"AFG\", \"AFG\", \"AFG…\n$ Year             <dbl> 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958,…\n$ LifeExpectancy0  <dbl> 27.7275, 27.9634, 28.4456, 28.9304, 29.2258, 29.9206,…\n$ LifeExpectancy10 <dbl> 49.1459, 49.2941, 49.5822, 49.8634, 49.9306, 50.4315,…\n$ LifeExpectancy25 <dbl> 54.4422, 54.5644, 54.7998, 55.0286, 55.1165, 55.4902,…\n$ LifeExpectancy45 <dbl> 63.4225, 63.5006, 63.6476, 63.7889, 63.8481, 64.0732,…\n$ LifeExpectancy65 <dbl> 73.4901, 73.5289, 73.6018, 73.6706, 73.7041, 73.8087,…\n$ LifeExpectancy80 <dbl> 83.7259, 83.7448, 83.7796, 83.8118, 83.8334, 83.8760,…\n```\n:::\n\n```{.r .cell-code}\nglimpse(le_gender)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 19,922\nColumns: 4\n$ Entity               <chr> \"Afghanistan\", \"Afghanistan\", \"Afghanistan\", \"Afg…\n$ Code                 <chr> \"AFG\", \"AFG\", \"AFG\", \"AFG\", \"AFG\", \"AFG\", \"AFG\", …\n$ Year                 <dbl> 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1…\n$ LifeExpectancyDiffFM <dbl> 1.261900, 1.270601, 1.288300, 1.306601, 1.276501,…\n```\n:::\n:::\n\n\nThere are fields `code` and `entity`, where entity tends to be more verbose/descriptive. Entities include geographic regions, countries, economic groupings etc. (So fairly messy, definitely not mutally exclusive and exhaustive)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nle_diff %>% \n  count(Entity) %>% \n  pull(Entity)\n```\n:::\n\n\nWe decided to look at a series of countries from across the world.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountries <- c(\"Germany\", \"United Kingdom\", \"Saudi Arabia\", \"South Africa\",\n               \"South Korea\", \"Japan\", \"Vietnam\", \"Argentina\", \"Venezuela\", \"France\")\n```\n:::\n\n\nToday we looked at life expectency in a selection of countries from 1900\n\n::: {.cell}\n\n```{.r .cell-code}\nle1900 <- le %>% \n  filter(Entity %in% countries,\n         Year>=1900) \n\nle1900 %>% \n  ggplot(aes(x=Year, y=LifeExpectancy))+\n  geom_line()+\n  facet_wrap(vars(Entity))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nWe then looked at the change in life expectency per year\n\n::: {.cell}\n\n```{.r .cell-code}\nle1900 %>% \n  group_by(Entity) %>% \n  mutate(lag_diff = LifeExpectancy - lag(LifeExpectancy, order_by = Year),\n         sign = lag_diff>0) %>% \n  ggplot(aes(x=Year, y=lag_diff))+\n  geom_point(aes(colour = sign))+\n  geom_hline(yintercept = 0)+\n  facet_wrap(vars(Entity))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nWe changed the axis magnification of each country, so that the changes were more readily observable\n\n::: {.cell}\n\n```{.r .cell-code}\nle1900lag <- le1900 %>% \n  group_by(Entity) %>% \n  mutate(lag_diff = LifeExpectancy - lag(LifeExpectancy, order_by = Year),\n         sign = lag_diff>0)\n\n le1900lag %>% \n  ggplot(aes(x=Year, y=lag_diff))+\n  geom_point(aes(colour = sign))+\n  geom_hline(yintercept = 0)+\n  facet_wrap(vars(Entity), scales = \"free_y\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nFinally, we examined variability in the change of life expectency altered for UK, France and Germany.  Here is can be seen that variability in life expectancy dramatically increased around the First and Second World Wars.  Data for Germany was incomplete for this period.\n\nTo do this we made use of the `slider` package, and within this the `slide_index` function, to produce a rolling standard deviation of annual changes. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(slider)\nle1900lag %>% \n  arrange(Year) %>% \n  filter(Entity %in% c(\"United Kingdom\", \"France\", \"Germany\")) %>% \n  mutate(roll_sd = slide_index_dbl(lag_diff, Year, .before = 4, .after = 4, .f = sd, .complete = T)) %>% \n  ggplot(aes(x=Year, y=roll_sd, color = Entity))+\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}