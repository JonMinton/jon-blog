{
  "hash": "afcd65064bfe5d5b57d5ef656b7530fe",
  "result": {
    "markdown": "---\ntitle: \"Tidy Tuesday 23 April 2024: Space objects\"\nauthor: \n    - \"Myriam Scansetti\"\n    - \"Brendan Clarke\"\n    - \"Tricia Govindasamy\"\n    - \"Jon Minton\"\n    - \"Andrew Saul\"\n    - \"Gatz Osorio\"\n    - \"Kennedy Owusu-Afriyie\"\ndate: \"2024-04-26\"\ncode-fold: true\nwarning: false\nmessage: false\ncategories: [tidy tuesday, space]\n---\n\n\nThe most recent [TidyTuesday dataset](https://github.com/rfordatascience/tidytuesday/tree/master/data/2024/2024-04-23) was taken from [Our World In Data](https://ourworldindata.org/grapher/yearly-number-of-objects-launched-into-outer-space), and showed the number of objects launched into space by different entities by year. Myriam led this week's session. \n\n## Data preparation and exploration\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Option 1: tidytuesdayR package \n#install.packages(\"tidytuesdayR\")\nlibrary(tidyverse)\nlibrary(janitor)\n```\n:::\n\n::: {.cell hash='index_cache/html/unnamed-chunk-2_ae1fd3f23ef7525043387bab0c5c4dfd'}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load('2024-04-23')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tDownloading file 1 of 1: `outer_space_objects.csv`\n```\n:::\n\n```{.r .cell-code}\nouter_space_object <- tuesdata$outer_space_objects\nunique(outer_space_object$Entity)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"APSCO\"                 \"Algeria\"               \"Angola\"               \n  [4] \"Arabsat\"               \"Argentina\"             \"Armenia\"              \n  [7] \"Australia\"             \"Austria\"               \"Azerbaijan\"           \n [10] \"Bangladesh\"            \"Belarus\"               \"Belgium\"              \n [13] \"Bhutan\"                \"Bolivia\"               \"Brazil\"               \n [16] \"Bulgaria\"              \"Canada\"                \"Chile\"                \n [19] \"China\"                 \"Colombia\"              \"Costa Rica\"           \n [22] \"Czechia\"               \"Denmark\"               \"Djibouti\"             \n [25] \"EUMETSAT\"              \"Ecuador\"               \"Egypt\"                \n [28] \"Estonia\"               \"Ethiopia\"              \"European Space Agency\"\n [31] \"European Union\"        \"Eutelsat\"              \"Finland\"              \n [34] \"France\"                \"Germany\"               \"Ghana\"                \n [37] \"Greece\"                \"Guatemala\"             \"Hungary\"              \n [40] \"India\"                 \"Indonesia\"             \"Inmarsat\"             \n [43] \"Intelsat\"              \"Intersputnik\"          \"Iran\"                 \n [46] \"Ireland\"               \"Israel\"                \"Italy\"                \n [49] \"Japan\"                 \"Jordan\"                \"Kazakhstan\"           \n [52] \"Kenya\"                 \"Kuwait\"                \"Laos\"                 \n [55] \"Latvia\"                \"Lithuania\"             \"Luxembourg\"           \n [58] \"Malaysia\"              \"Mauritius\"             \"Mexico\"               \n [61] \"Moldova\"               \"Monaco\"                \"Mongolia\"             \n [64] \"Morocco\"               \"NATO\"                  \"Nepal\"                \n [67] \"Netherlands\"           \"New Zealand\"           \"Nigeria\"              \n [70] \"North Korea\"           \"Norway\"                \"Pakistan\"             \n [73] \"Papua New Guinea\"      \"Paraguay\"              \"Peru\"                 \n [76] \"Philippines\"           \"Poland\"                \"Portugal\"             \n [79] \"Qatar\"                 \"RASCOM\"                \"Romania\"              \n [82] \"Russia\"                \"Rwanda\"                \"Saudi Arabia\"         \n [85] \"Sea Launch\"            \"Singapore\"             \"Slovakia\"             \n [88] \"Slovenia\"              \"South Africa\"          \"South Korea\"          \n [91] \"Spain\"                 \"Sri Lanka\"             \"Starsem\"              \n [94] \"Sweden\"                \"Switzerland\"           \"Taiwan\"               \n [97] \"Thailand\"              \"Tunisia\"               \"Turkey\"               \n[100] \"Turkmenistan\"          \"Uganda\"                \"Ukraine\"              \n[103] \"United Arab Emirates\"  \"United Kingdom\"        \"United States\"        \n[106] \"Uruguay\"               \"Venezuela\"             \"Vietnam\"              \n[109] \"World\"                 \"Zimbabwe\"             \n```\n:::\n:::\n\n\nWe wanted to know what the entities referred to:\n\n::: {.cell}\n\n```{.r .cell-code}\nouter_space_object %>% \n  filter(!is.na(Code)) %>% \n  pull(Entity) %>% \n  unique()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Algeria\"              \"Angola\"               \"Argentina\"           \n [4] \"Armenia\"              \"Australia\"            \"Austria\"             \n [7] \"Azerbaijan\"           \"Bangladesh\"           \"Belarus\"             \n[10] \"Belgium\"              \"Bhutan\"               \"Bolivia\"             \n[13] \"Brazil\"               \"Bulgaria\"             \"Canada\"              \n[16] \"Chile\"                \"China\"                \"Colombia\"            \n[19] \"Costa Rica\"           \"Czechia\"              \"Denmark\"             \n[22] \"Djibouti\"             \"Ecuador\"              \"Egypt\"               \n[25] \"Estonia\"              \"Ethiopia\"             \"Finland\"             \n[28] \"France\"               \"Germany\"              \"Ghana\"               \n[31] \"Greece\"               \"Guatemala\"            \"Hungary\"             \n[34] \"India\"                \"Indonesia\"            \"Iran\"                \n[37] \"Ireland\"              \"Israel\"               \"Italy\"               \n[40] \"Japan\"                \"Jordan\"               \"Kazakhstan\"          \n[43] \"Kenya\"                \"Kuwait\"               \"Laos\"                \n[46] \"Latvia\"               \"Lithuania\"            \"Luxembourg\"          \n[49] \"Malaysia\"             \"Mauritius\"            \"Mexico\"              \n[52] \"Moldova\"              \"Monaco\"               \"Mongolia\"            \n[55] \"Morocco\"              \"Nepal\"                \"Netherlands\"         \n[58] \"New Zealand\"          \"Nigeria\"              \"North Korea\"         \n[61] \"Norway\"               \"Pakistan\"             \"Papua New Guinea\"    \n[64] \"Paraguay\"             \"Peru\"                 \"Philippines\"         \n[67] \"Poland\"               \"Portugal\"             \"Qatar\"               \n[70] \"Romania\"              \"Russia\"               \"Rwanda\"              \n[73] \"Saudi Arabia\"         \"Singapore\"            \"Slovakia\"            \n[76] \"Slovenia\"             \"South Africa\"         \"South Korea\"         \n[79] \"Spain\"                \"Sri Lanka\"            \"Sweden\"              \n[82] \"Switzerland\"          \"Taiwan\"               \"Thailand\"            \n[85] \"Tunisia\"              \"Turkey\"               \"Turkmenistan\"        \n[88] \"Uganda\"               \"Ukraine\"              \"United Arab Emirates\"\n[91] \"United Kingdom\"       \"United States\"        \"Uruguay\"             \n[94] \"Venezuela\"            \"Vietnam\"              \"World\"               \n[97] \"Zimbabwe\"            \n```\n:::\n:::\n\n\nGenerally, when an entity has a 'code', it is a country (though contains some other aggregations, like whole world, as well)\n\n::: {.cell}\n\n```{.r .cell-code}\nouter_space_object %>% \n  filter(!is.na(Code)) %>% \n  distinct(Entity) %>% \n  arrange(desc(Entity))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 97 × 1\n   Entity              \n   <chr>               \n 1 Zimbabwe            \n 2 World               \n 3 Vietnam             \n 4 Venezuela           \n 5 Uruguay             \n 6 United States       \n 7 United Kingdom      \n 8 United Arab Emirates\n 9 Ukraine             \n10 Uganda              \n# ℹ 87 more rows\n```\n:::\n:::\n\n\nWe decided to use `janitor::clean_names` to avoid having to remember the case of columns. \n\n::: {.cell}\n\n```{.r .cell-code}\nouter_space_objects <- outer_space_object %>% \n  clean_names()\nouter_space_objects\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,175 × 4\n   entity  code   year num_objects\n   <chr>   <chr> <dbl>       <dbl>\n 1 APSCO   <NA>   2023           1\n 2 Algeria DZA    2002           1\n 3 Algeria DZA    2010           1\n 4 Algeria DZA    2016           3\n 5 Algeria DZA    2017           1\n 6 Angola  AGO    2017           1\n 7 Angola  AGO    2022           1\n 8 Arabsat <NA>   1985           2\n 9 Arabsat <NA>   1992           1\n10 Arabsat <NA>   1996           2\n# ℹ 1,165 more rows\n```\n:::\n:::\n\n\n## Visualisation \n\nHow many objects released into space by the world by year? \n\n\n::: {.cell}\n\n```{.r .cell-code}\nouter_space_objects %>% \n  filter(entity == \"World\") %>% \n  group_by(year) %>% \n  summarise(num_objects = sum(num_objects)) %>% \n  ungroup() %>% \n  ggplot(aes(x = year, y =num_objects))+\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nWe thought maybe there's been, and been periods of, exponential growth, so looked at this with a log y scale too:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nouter_space_objects %>% \n  filter(entity == \"World\") %>% \n  group_by(year) %>% \n  summarise(num_objects = sum(num_objects)) %>% \n  ungroup() %>% \n  ggplot(aes(x = year, y =num_objects))+\n  geom_line()+\n  scale_y_log10()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nHere it's more obvious there were broadly two 'regimens' globally of objects released into space. \n\n\nWhich countries released most objects into space over the whole period covered by the dataset?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_10 <- outer_space_objects %>% \n  filter(entity != \"World\", entity != \"European Space Agency\") %>% \n  count(entity, wt = num_objects, name = \"amount\") %>% \n  slice_max(order_by = amount, n = 10) %>% \n  pull(entity)\ntop_10\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"United States\"  \"Russia\"         \"China\"          \"United Kingdom\"\n [5] \"Japan\"          \"France\"         \"India\"          \"Germany\"       \n [9] \"Canada\"         \"Luxembourg\"    \n```\n:::\n:::\n\n\nFor these top 10 countries, we decided to look at trends over time:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nouter_space_objects %>% \n  filter(entity %in% top_10) %>% \n  ggplot(aes(x = year, y =num_objects, colour = entity))+\n  geom_line()+\n  scale_y_log10()+\n  facet_wrap(~entity, scales = \"free_y\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nTricia suggested we ordered these facets by the total number of objects released over the whole period. For this we used the `forcats` package, with a bit of trial and error. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# This use of fct_reorder looks like it's worked, but it hasn't\nouter_space_objects %>%\n  filter(entity %in% top_10) %>%\n  mutate(entity = fct_reorder(entity, num_objects, .desc = TRUE)) %>%\n  ggplot(aes(x = year, y =num_objects, colour = entity))+\n  geom_line()+\n  scale_y_log10()+\n  facet_wrap(~entity, scales = \"free_y\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\nThis version looks initially that it's worked, but it hasn't. We can confirm this with the following: \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# This confirms the ordering is wrong in the above\nouter_space_objects %>%\n  filter(entity %in% top_10) %>%\n  group_by(entity) %>%\n  summarise(num_objects = sum(num_objects)) %>%\n  ungroup() %>%\n  arrange(desc(num_objects))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   entity         num_objects\n   <chr>                <dbl>\n 1 United States         9632\n 2 Russia                3723\n 3 China                 1051\n 4 United Kingdom         765\n 5 Japan                  325\n 6 France                 151\n 7 India                  144\n 8 Germany                120\n 9 Canada                 102\n10 Luxembourg              86\n```\n:::\n:::\n\n\n\nSo we use `group_by` but with `mutate`, not `summarise`, to create the `total_num_objects` column, which is then used by `fct_reorder` to create something that can be faceted correctly\n\n\n::: {.cell}\n\n```{.r .cell-code}\nouter_space_objects %>%\n  filter(entity %in% top_10) %>%\n  group_by(entity) %>%\n  mutate(total_num_objects = sum(num_objects)) %>%\n  ungroup() %>%\n  mutate(entity = fct_reorder(entity, total_num_objects, .desc = TRUE)) %>%\n  ggplot(aes(x = year, y =num_objects, colour = entity))+\n  geom_line()+\n  scale_y_log10()+\n  facet_wrap(~entity, scales = \"free_y\") + \n  labs(\n    title = \"Number of objects in outer space by top 10 countries\",\n    subtitle = \"Arranged by total number of objects put in outer space\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nWe can see, for example, that China, Japan and India's number of objects sent into space has been growing exponentially for a long time. The USA, and UK, appear to be having more of a recent exponential growth spurt. Russia's object release rate declined with the collapse of the USSR. ",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}