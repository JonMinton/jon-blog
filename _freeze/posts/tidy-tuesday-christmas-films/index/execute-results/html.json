{
  "hash": "aa92e201ba745b644606c9830e2538ac",
  "result": {
    "markdown": "---\ntitle: \"Tidy Tuesday: Christmas films\"\nauthor:\n    - \"Tom Fowler\"\n    - \"Nick Christofides\"\n    - \"Andrew Saul\"\n    - \"Jon Minton\"\ndate: \"2023-12-21\"\n---\n\n\nA shorter and even tardier Tidy Tuesday this week, given we gave ourselves only half an hour rather than the usual hour to look over the most recent dataset. \n\nThe dataset was about Christmas films. \n\nOur first question: is *Die Hard a Christmas film?*\n\nNot according to [the methods used to produce the dataset](https://github.com/rfordatascience/tidytuesday/tree/master/data/2023/2023-12-12). If a film doesn't have Christmas or equivalent in its title, it's not coming in! \n\n\n\n\n\n\n\n- loading\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntt <- tidytuesdayR::tt_load('2023-12-12')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Compiling #TidyTuesday Information for 2023-12-12 ----\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- There are 2 files available ---\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Starting Download ---\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tDownloading file 1 of 2: `holiday_movies.csv`\n\tDownloading file 2 of 2: `holiday_movie_genres.csv`\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Download complete ---\n```\n:::\n\n```{.r .cell-code}\ndf1 <- tt[[1]]\ndf2 <- tt[[2]]\n```\n:::\n\n\n - \n- count of films by year\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 %>%\n  count(year, sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 91 × 2\n    year     n\n   <dbl> <int>\n 1  2021   183\n 2  2022   173\n 3  2020   172\n 4  2019   143\n 5  2018   129\n 6  2023   107\n 7  2017   102\n 8  2015    76\n 9  2016    75\n10  2012    68\n# ℹ 81 more rows\n```\n:::\n:::\n\n\n- how many films by year -plot with log on y axis\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 %>%\n  count(year) %>%\n  ggplot(aes(x = year, y = n))+\n  geom_point()+\n  #stat_smooth()+\n  scale_y_log10()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n- how many films by year -plot with log on y axis\n- filter by 1960 onwards\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 %>%\n  filter(year >= 1960) %>%\n  count(year) %>%\n  ggplot(aes(x = year, y = n))+\n  geom_point()+\n  #stat_smooth()+\n  scale_y_log10()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n- how many films by year -plot with log on y axis\n- filter by 1960 onwards\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 %>%\n  filter(year >= 1960) %>%\n  count(year) %>%\n  ggplot(aes(x = year, y = n))+\n  geom_point()+\n  stat_smooth(method = \"lm\")+\n  scale_y_log10()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n# questions\n\n- how are they published? [cinema / streaming?]\n- is it on imdb?\n- full inclusion of 2023?\n- are more recent films rubbish?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 %>%\n  \n  group_by(year) %>%\n  summarise(avg_rating = mean(average_rating)) %>%\n  ggplot(aes(x = year, y = avg_rating))+\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n- number of films vs avg rating\n- fewer films may drive extreme values\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 %>%\n  \n  group_by(year) %>%\n  summarise(\n    avg_rating = mean(average_rating), \n    n_films = n() ) %>%\n  ggplot(aes(x = n_films, y = avg_rating))+\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n- number of films vs avg rating\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 %>%\n  \n  group_by(year) %>%\n  summarise(\n    avg_rating = mean(average_rating), \n    n_films = n() ) %>%\n  ggplot(aes(x = n_films, y = avg_rating))+\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}