---
title: "Edinbr Pair Programming"
author: 
  - "Jim Gardner"
  - "Jon Minton"
date: "2024-02-23"
categories: [Edinbr, R, pair programming]
---

## Intro

This is a blog post where we've covered [a pair programming exercise completed as part of the EdinbR group](http://edinbr.org/edinbr/2024/02/12/February-meeting.html). 

> This session \[was\]... led by Dr Brittany Blankinship and Dr Kasia Banas, two academics from the Data Driven Innovation for Health and Social Care Talent Team, based at the Usher Institute. Brittany and Kasia are avid R programmers and data science educators.

The link to the dataset and exercise description is [here](https://github.com/bblankinship/EdinbRTalk-2024-02-23)

There are two datasets. We are looking at one related to Madrid (and maybe why we shouldn't go there as it's polluted?!)

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# About the data

The data for this tutorial were collected under the instructions from Madrid's City Council and are publicly available on their website. In recent years, high levels of pollution during certain dry periods has forced the authorities to take measures against the use of cars and act as a reasoning to propose certain regulations. These data include daily and hourly measurements of air quality from 2001 to 2008. Pollutants are categorized based on their chemical properties.

There are a number of stations set up around Madrid and each station's data frame contains all particle measurements that such station has registered from 01/2001 - 04/2008. Not every station has the same equipment, therefore each station can measure only a certain subset of particles. The complete list of possible measurements and their explanations are given by the website:

* `SO_2`: sulphur dioxide level measured in μg/m³. High levels can produce irritation in the skin and membranes, and worsen asthma or heart diseases in sensitive groups.
* `CO`: carbon monoxide level measured in mg/m³. Carbon monoxide poisoning involves headaches, dizziness and confusion in short exposures and can result in loss of consciousness, arrhythmias, seizures or even death.
* `NO_2`: nitrogen dioxide level measured in μg/m³. Long-term exposure is a cause of chronic lung diseases, and are harmful for the vegetation.
* `PM10`: particles smaller than 10 μm. Even though they cannot penetrate the alveolus, they can still penetrate through the lungs and affect other organs. Long term exposure can result in lung cancer and cardiovascular complications.
* `NOx`: nitrous oxides level measured in μg/m³. Affect the human respiratory system worsening asthma or other diseases, and are responsible of the yellowish-brown color of photochemical smog.
* `O_3`: ozone level measured in μg/m³. High levels can produce asthma, bronchytis or other chronic pulmonary diseases in sensitive groups or outdoor workers.
* `TOL`: toluene (methylbenzene) level measured in μg/m³. Long-term exposure to this substance (present in tobacco smoke as well) can result in kidney complications or permanent brain damage.
* `BEN`: benzene level measured in μg/m³. Benzene is a eye and skin irritant, and long exposures may result in several types of cancer, leukaemia and anaemias. Benzene is considered a group 1 carcinogenic to humans.
* `EBE`: ethylbenzene level measured in μg/m³. Long term exposure can cause hearing or kidney problems and the IARC has concluded that long-term exposure can produce cancer.
* `MXY`: m-xylene level measured in μg/m³. Xylenes can affect not only air but also water and soil, and a long exposure to high levels of xylenes can result in diseases affecting the liver, kidney and nervous system.
* `PXY`: p-xylene level measured in μg/m³. See MXY for xylene exposure effects on health.
* `OXY`: o-xylene level measured in μg/m³. See MXY for xylene exposure effects on health.
* `TCH`: total hydrocarbons level measured in mg/m³. This group of substances can be responsible of different blood, immune system, liver, spleen, kidneys or lung diseases.
* `NMHC`: non-methane hydrocarbons (volatile organic compounds) level measured in mg/m³. Long exposure to some of these substances can result in damage to the liver, kidney, and central nervous system. Some of them are suspected to cause cancer in humans.

# Tutorial goals 

The goal of this tutorial is to see if pollutants are decreasing (is air quality improving) and also compare which pollutant has decreased the most over the span of 5 years (2001 - 2006).

**High-level summary of tasks**

1. First do a plot of one of the pollutants (EBE).
2. Next, group it by month and year; calculate the maximum value and plot it (to see the trend through time).
3. Now we will look at which pollutant decreased the most. Repeat the same thing for every column - to speed up the process, use the `map()` function. First we will look at pollution in 2001 (get the maximum value for each of the pollutants). And then do the same for 2006.

## Packages 

We will be using the `tidyverse` set of packages:

```{r load-tidyverse}
library(tidyverse)
```

# Exercises

Remember to switch the driver after each task.


## Task 1

To begin with, load the `madrid_pollution.csv` data set into your R environment. Assign the data to an object called `madrid`.

```{r task1}
data_url <- "https://raw.githubusercontent.com/bblankinship/EdinbRTalk-2024-02-23/main/madrid_pollution.csv"

dta <- read_tsv(data_url)

dta
```

First thing we realised, it's not really a CSV. 


## Task 2

Now that the data is loaded in R, create a scatter plot that compares ethylbenzene (EBE) values against the date they were recorded. This graph will showcase the concentration of ethylbenzene in Madrid over time. As usual, label your axes:

* x = Date
* y = Ethylbenzene (μg/m³)

Assign your answer to an object called `EBE_pollution`.

```{r task2}
EBE_pollution <- dta |>
  ggplot(aes(date, EBE)) +
  geom_point(alpha = 0.4) +
  scale_x_datetime() +
  scale_y_log10() +
  labs(x = "Date", y = "Ethylbenzene (μg/m³)")
```

What is your conclusion about the level of EBE over time?

Looks like it has a seasonal pattern.

## Task 3

The question above asks you to write out code that allows visualization of all EBE recordings in the dataset - which are taken every single hour of every day. Consequently the graph consists of many points and appears densely plotted. In this question, we are going to clean up the graph and focus on max EBE readings from each month. Create a new data set with maximum EBE reading from each month in each year. Save your new data set as `madrid_pollution`.

```{r task3}
madrid_pollution <-
    dta |>
        mutate(
            mnth = month(date, label = TRUE),
            yr   = year(date)
        ) |>
        group_by(
            yr, mnth
        ) |>
        summarise(
            max_ebe = max(EBE, na.rm = TRUE)
        ) |>
        ungroup()

madrid_pollution
```

## Task 4

Plot the new maximum EBE values versus the month they were recorded, split into side-by-side plots for each year.

Assign your answer to an object called `madrid_plot`.

```{r task4}
madrid_plot <- madrid_pollution |>
  ggplot(aes(mnth, max_ebe)) +
  geom_col() +
  scale_y_log10() +
  labs(x = "Month", y = "Maximum Ethylbenzene (μg/m³)") +
  facet_wrap(~ yr) + 
  coord_flip()

madrid_plot
```

## Task 5

Now we want to see which of the pollutants has decreased the most in 2001. 

Assign your answer to an object called `pollution_2001`.

```{r task5}
dta |>
    filter(year(date) == 2001) |>
    select(-year, -mnth) |>
    pivot_longer(-date, names_to = "pollutant", values_to = "value") |>
    group_by(pollutant) |>
    summarise(
        max_val = max(value, na.rm = TRUE),
        min_val = min(value, na.rm = TRUE)
    ) |>
    mutate(diff = max_val - min_val) |> 
    arrange(desc(diff))

```

Thoughts: 

This is an ambiguous question. We've chosen to answer it in a way that doesn't make sense but is quick to solve!


## Task 6

Now repeat what you did for Task 5, but filter for 2006 instead.
Assign your answer to an object called `pollution_2006`.

```{r task6}

pollution_2006 <- dta |>
    filter(year(date) == 2006) |>
    select(-year, -mnth) |>
    pivot_longer(-date, names_to = "pollutant", values_to = "value") |>
    group_by(pollutant) |>
    summarise(
        max_val = max(value, na.rm = TRUE),
        min_val = min(value, na.rm = TRUE)
    ) |>
    mutate(diff = max_val - min_val) |> 
    arrange(desc(diff))

pollution_2006
```

## Task 7

Which pollutant decreased by the greatest magnitude between 2001 and 2006? Come up with a programmatic solution 

We'll interpret this as the average for the year for each pollutant in both years.

```{r task7}
dta |> 
    filter(year %in% c(2001, 2006)) |>
    select(-date, -mnth) |>
    pivot_longer(-year, names_to = "pollutant", values_to = "value") |>
    group_by(year, pollutant) |>
    summarise(mean_value = mean(value, na.rm = TRUE)) |>
    ungroup() |> 
    group_by(pollutant) |>
    summarise(
        change = mean_value[year == 2006] - mean_value[year == 2001]
    ) |>
    ungroup() |>
    arrange(change)


```

NOTE: This worksheet has been adapted from Data Science: First Introduction Worksheets, by Tiffany Timbers, Trevor Campbell and Melissa Lee, available at https://worksheets.datasciencebook.ca/
